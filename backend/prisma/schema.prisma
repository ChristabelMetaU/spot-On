
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id Int  @id @default(autoincrement())
  username String
  email String @unique
  password_hash String
  role String
  created_at DateTime @default(now())
  report reports[]
  LockedSpot LockedSpot[]
  ReservedSpots ReservedSpots[]
  notifications notifications[]
}

model spots{
  id Int @id @default(autoincrement())
  lotName String @unique
  type String
    coordLat Float
    coordLng Float
    Price Float @default(0.00)
  isOccupied Boolean @default(false)
  LockedSpot LockedSpot[]
  ReservedSpots ReservedSpots[]
  report reports[]
  notifications notifications[]

}
model LockedSpot{
  id Int @id @default(autoincrement())
  spotId Int
  userId Int
  spot spots @relation(fields: [spotId], references: [id])
  user Users @relation(fields: [userId], references: [id])
  lockeAt DateTime @default(now())
  expiresAt DateTime
}
model ReservedSpots{
  id Int @id @default(autoincrement())
  spotId Int
  userId Int
  spot spots @relation(fields: [spotId], references: [id])
  user Users @relation(fields: [userId], references: [id])
  reservedAt DateTime @default(now())
  expiresAt DateTime?
}
model reports{
  id Int @id @default(autoincrement())
  description String
  type String
  user_id Int
  spot_name String
  isOccupied Boolean @default(false)
  notified Boolean @default(false)
  user Users @relation(fields: [user_id], references: [id])
  spot spots @relation(fields: [spot_name], references: [lotName])
  updated_at DateTime @default(now())
   created_at DateTime @default(now())

}

model notifications{
  id Int @id @default(autoincrement())
  userId Int
  message String
  spotId Int
  read Boolean @default(false)
  createdAt DateTime @default(now())
  user Users @relation(fields: [userId], references: [id])
  spot spots @relation(fields: [spotId], references: [id])
}
